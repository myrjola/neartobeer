fastlane_version "2.28.5"

default_platform :ios

platform :ios do
  desc "Submit a new Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :alpha do
    sigh
    increment_build_number(xcodeproj: './ios/neartobeer.xcodeproj') # Increment the build number
    gym(scheme: "Near to beer", project: './ios/neartobeer.xcodeproj') # Build the app
    pilot(skip_submission: true) # Upload the app to TestFlight
  end
end

platform :android do
  desc "Submit a new Alpha Build to Play Store"
  # Build the release APK
  lane :build do |options|
    gradle(task: "assemble",
           build_type: options[:build_type] || "Release",
           project_dir: "android/",
           properties: {
             'versionCode' => options[:version_code] || 1,
             'versionName' => options[:version_name] || "alpha"
           })
  end

  lane :alpha do
    version_code = bump_version_code
    # Ask for a multi-line input. The user confirms their input by typing `END`
    # and Enter
    changelog = prompt(
      text: "Changelog: ",
      multi_line_end_keyword: "END"
    )
    changelog_file = "metadata/android/en-US/changelogs/#{version_code}.txt"
    File.write(changelog_file, changelog)

    build(version_code: version_code, version_name: "alpha_#{version_code}")
    # Upload the APK to the Play Store
    supply(track: "alpha", apk: "android/app/build/outputs/apk/app-release.apk")
  end

  lane :screenshots do
    build(build_type: "Debug")
    gradle(task: "installDebugAndroidTest", project_dir: "android/")
    screengrab
  end

  lane :bump_version_code do
    # Get the last version code and increment it.
    version_file = "metadata/androidVersionCode"
    version_code = File.read(version_file).to_i
    version_code = version_code+1

    File.write(version_file, version_code)

    version_code
  end
end

# Local Variables:
# mode: ruby
# End:
